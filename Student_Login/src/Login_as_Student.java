
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author utkar
 */
public class Login_as_Student extends javax.swing.JFrame {
 private LocalTime logintime;
 private LocalTime logouttime;
    /**
     * Creates new form Login_as_Student
     */
    public Login_as_Student() {
        setUndecorated(true);
        initComponents();
          comobox();
          combox1();
          
    }
    
    
        
    
    
    
    private void comobox()
    {
        try {
            Connection con = studentdbconnection.getConnection();
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("select * from master_Student_details ORDER BY Name ASC ");
            while(rs.next()){
                String Roll_Number = rs.getString("Roll_Number");
                studentcomboroll.addItem(Roll_Number);
                
                
            }
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
    
    }
    private void combox1(){
        try {
            
            Connection con = studentdbconnection.getConnection();
            Statement stm1 = con.createStatement();
            
            ResultSet rs1 = stm1.executeQuery("select * from staff");
            while(rs1.next()){
                String Subject = rs1.getString("Subject");
                studentcombosubject.addItem(Subject);
                
            }    
             } catch(Exception e) {
                JOptionPane.showMessageDialog(null,e);
                }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        studentcomboroll = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        studentcombosubject = new javax.swing.JComboBox<>();
        btnlogin = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtOtp = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        closebutton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(186, 79, 86));

        jPanel1.setBackground(new java.awt.Color(186, 79, 86));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(74, 31, 61)));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Roll Number :-");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(90, 110, 140, 40);

        studentcomboroll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentcomborollActionPerformed(evt);
            }
        });
        jPanel1.add(studentcomboroll);
        studentcomboroll.setBounds(230, 110, 170, 40);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Subject :-");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(90, 180, 130, 40);

        studentcombosubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentcombosubjectActionPerformed(evt);
            }
        });
        jPanel1.add(studentcombosubject);
        studentcombosubject.setBounds(230, 180, 170, 40);

        btnlogin.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnlogin.setText("Generate OTP");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });
        jPanel1.add(btnlogin);
        btnlogin.setBounds(140, 300, 200, 44);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Your OTP:-");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(90, 240, 130, 31);

        txtOtp.setBackground(new java.awt.Color(186, 79, 86));
        txtOtp.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtOtp.setBorder(null);
        jPanel1.add(txtOtp);
        txtOtp.setBounds(230, 240, 170, 30);

        jLabel4.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel4MouseDragged(evt);
            }
        });
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 6, 410, 20);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(74, 31, 61));
        jLabel5.setText("STUDENT  LOGIN");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(100, 50, 310, 30);

        closebutton.setBackground(new java.awt.Color(186, 79, 86));
        closebutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        closebutton.setText("X");
        closebutton.setBorder(null);
        closebutton.setContentAreaFilled(false);
        closebutton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(closebutton);
        closebutton.setBounds(440, 10, 30, 20);

        jButton3.setBackground(new java.awt.Color(186, 79, 86));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton3.setText("-");
        jButton3.setBorder(null);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(410, 10, 30, 20);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8_student_male_96px.png"))); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(0, 0, 90, 120);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 474, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private int clickCount = 0;
private boolean isEntryAdded = false;
    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed
        // TODO add your handling code here:
        clickCount++;
if (clickCount == 1) {
        
        
        java.util.Random r = new java.util.Random();
                int start = 10000;
                int end = 100000;
                int result = r.nextInt(end-start) + start;
                
                txtOtp.setText(String.valueOf(result));
       try 
            {
                
                String selectedItem = studentcomboroll.getSelectedItem().toString();
                
               // Class.forName("com.mysql.jdbc.driver");
                Connection con = studentdbconnection.getConnection();
                
                
                String query = "SELECT Name,Batch,Year,Pc,Year_of_Admission FROM master_student_details WHERE Roll_Number=?";
                PreparedStatement pstmt = con.prepareStatement(query);
                pstmt.setString(1,selectedItem);
                
                ResultSet rs=pstmt.executeQuery();
                if(rs.next()){
                    String name=rs.getString("Name");
                    String batch=rs.getString("Batch");
                    String year=rs.getString("Year");
                    String pc=rs.getString("Pc");
                    LocalDate todaydate = LocalDate.now();
                  logintime = LocalTime.now();
                       
                 String yoa=rs.getString("Year_of_Admission");
                    
                 //    DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
          //  DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss a");
          
                 
                 
                PreparedStatement pst1=con.prepareStatement("insert into student_attendance_records (Roll_Number,Name,Subject,Batch,Year,Pc,sdate,login,OTP,Year_of_Admission)values(?,?,?,?,?,?,?,?,?,?)");
               DateTimeFormatter formatter = DateTimeFormatter.ofPattern("hh:mm:ss");
                String time = logintime.format(formatter); 
                
       
        
                pst1.setString(1,selectedItem);
                pst1.setString(2, name);
               
                
                String dItem = studentcombosubject.getSelectedItem().toString();
                pst1.setString(3,dItem);
                
                pst1.setString(4,batch);
                pst1.setString(5,year);
                pst1.setString(6,pc);
              //  pst1.setObject(7, setText(dateFormat.format(now)));
               // pst1.setObject(8,setText(timeFormat.format(now)));
                pst1.setDate(7,java.sql.Date.valueOf(todaydate));
                  //  pst1.setTime(8,java.sql.Time.valueOf(time1));
                pst1.setString(8,time);
                pst1.setString(9,txtOtp.getText());
                pst1.setString(10,yoa);
                pst1.executeUpdate();
                
                JOptionPane.showMessageDialog(this,"Warning:Verify this OTP From Your Device After End of Practical Session till now minimize this window ");
                isEntryAdded = true;
                }
            } catch (Exception ex) {
                Logger.getLogger(Login_as_Student.class.getName()).log(Level.SEVERE, null, ex);
            }
       } else {
    
     if (isEntryAdded) {
        try {
            Connection con = studentdbconnection.getConnection();
         //   String selectedItem = studentcomboroll.getSelectedItem().toString();
            String query = "DELETE FROM student_attendance_records WHERE OTP=?";
            PreparedStatement pstmt = con.prepareStatement(query);
            pstmt.setString(1,txtOtp.getText());
            pstmt.executeUpdate();
        } catch (Exception ex) {
            Logger.getLogger(Login_as_Student.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    JOptionPane.showMessageDialog(this, "Please open the window again to SUBMIT ");
    dispose(); // Close the window
}
/*studentlogout st =new studentlogout();
st.setVisible(true);
        dispose();*/
    }//GEN-LAST:event_btnloginActionPerformed
public int mousepX,mousepY;
    private void jLabel4MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseDragged
        // TODO add your handling code here:
        int kordinatX = evt.getXOnScreen();
       int kordinatY = evt.getYOnScreen();
       
       this.setLocation(kordinatX-mousepX, kordinatY-mousepY);
    }//GEN-LAST:event_jLabel4MouseDragged

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        // TODO add your handling code here:
        mousepX = evt.getX();
        mousepY = evt.getY();
    }//GEN-LAST:event_jLabel4MousePressed

    private void closebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closebuttonActionPerformed
        // TODO add your handling code here:
       // JOptionPane.showMessageDialog(this,"Warning:If You close,Your Attendance will NOT be Considered..!");
       // dispose();
    
//       if (isEntryAdded) {
//        try {
//            Connection con = studentdbconnection.getConnection();
//            String selectedItem = studentcomboroll.getSelectedItem().toString();
//            String query = "DELETE FROM student_attendance_records WHERE OTP=?";
//            PreparedStatement pstmt = con.prepareStatement(query);
//            pstmt.setString(1,txtOtp.getText());
//            pstmt.executeUpdate();
//        } catch (Exception ex) {
//            Logger.getLogger(Login_as_Student.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
//       JOptionPane.showMessageDialog(this,"Warning:If You close,Your Attendance will NOT be Considered..!");


  //  super.dispose();
      
  
                                           
                                                                 
    // Assuming you have a database connection established
  Connection con = studentdbconnection.getConnection();

// Create a SQL query to check for empty fields and delete if necessary
String selectQuery = "SELECT * FROM student_attendance_records WHERE OTP = ? AND (logout IS NULL OR logout = ' ') AND (Total_time IS NULL OR Total_time = ' ') AND (Attendance IS NULL OR Attendance = ' ')";
String deleteQuery = "DELETE FROM student_attendance_records WHERE OTP = ? AND (logout IS NULL OR logout = ' ') AND (Total_time IS NULL OR Total_time = ' ') AND (Attendance IS NULL OR Attendance = ' ')";

// Execute the queries
PreparedStatement pstmt = null;
try {
    pstmt = con.prepareStatement(selectQuery);
    pstmt.setString(1, txtOtp.getText());
    ResultSet resultSet = pstmt.executeQuery();

    // Check if there are any rows with empty fields
    if (resultSet.next()) {
        // Show message dialog indicating empty fields
        JOptionPane.showMessageDialog(null, "Your attendance is not recorded because you did not submit OTP");

        // Delete the rows with empty fields
        pstmt = con.prepareStatement(deleteQuery);
        pstmt.setString(1, txtOtp.getText());
        pstmt.executeUpdate();
        dispose();
    } else {
        // If no empty fields, dispose of the screen or perform other actions
        JOptionPane.showMessageDialog(null, "Your attendance is recorded");
        dispose();
    }

    // Close the result set
    resultSet.close();
} catch (SQLException ex) {
    Logger.getLogger(Login_as_Student.class.getName()).log(Level.SEVERE, null, ex);
} finally {
    // Close the prepared statement and database connection
    try {
        if (pstmt != null) {
            pstmt.close();
        }
        if (con != null) {
            con.close();
        }
    } catch (SQLException ex) {
        Logger.getLogger(Login_as_Student.class.getName()).log(Level.SEVERE, null, ex);
    }
}



    }//GEN-LAST:event_closebuttonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_jButton3ActionPerformed


    private void studentcomborollActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentcomborollActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentcomborollActionPerformed

    private void studentcombosubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentcombosubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentcombosubjectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login_as_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login_as_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login_as_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login_as_Student.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login_as_Student().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnlogin;
    private javax.swing.JButton closebutton;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> studentcomboroll;
    private javax.swing.JComboBox<String> studentcombosubject;
    private javax.swing.JTextField txtOtp;
    // End of variables declaration//GEN-END:variables
}
